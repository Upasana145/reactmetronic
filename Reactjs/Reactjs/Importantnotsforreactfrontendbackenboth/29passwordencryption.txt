// const express = require('express');
// const mysql = require('mysql');
// const cors = require('cors');

// const app = express();
// app.use(cors());
// app.use(express.json());

// const db = mysql.createConnection({
//   host: 'localhost',
//   user: 'root',
//   password: '',
//   database: 'signup',
// });

// db.connect((err) => {
//   if (err) {
//     console.error('Error connecting to the database:', err);
//     return;
//   }
//   console.log('Connected to the database');
// });

// app.post('/signup', (req, res) => {
//   const sql = 'INSERT INTO login (`firstname`, `lastname`, `email`, `password`) VALUES (?, ?, ?, ?)';
//   const values = [
//     req.body.firstname,
//     req.body.lastname,
//     req.body.email,
//     req.body.password,
//   ];
//   db.query(sql, values, (err, data) => {
//     if (err) {
//       console.error('Error inserting data:', err);
//       return res.json('Error');
//     }
//     return res.json('Success');
//   });
// });

// app.post('/login', (req, res) => {
//   const sql = 'SELECT * FROM login WHERE `email` = ? AND `password` = ?';
//   db.query(sql, [req.body.email, req.body.password], (err, data) => {
//     if (err) {
//       console.error('Error querying data:', err);
//       return res.json('Error');
//     }
//     if (data.length > 0) {
//       return res.json('Success');
//     } else {
//       return res.json('Fail');
//     }
//   });
// });

// app.listen(8081, () => {
//   console.log('listening');
// });












const express = require('express');
const mysql = require('mysql');
const cors = require('cors');
const bcrypt = require('bcrypt');
// const crypto = require('crypto');

const app = express();

app.use(cors());
app.use(express.json());

const db = mysql.createConnection({
  host: 'localhost',
  user: 'root',
  password: '',
  database: 'signup',
});

db.connect((err) => {
  if (err) {
    console.error('Error connecting to the database:', err);
    return;
  }
  console.log('Connected to the database');
});

const salt= 10; // Define the number of salt rounds for bcrypt

app.post('/signup', (req, res) => {
  // console.log("hey i am req----------->",req,"<----------------hey i am req")
  // console.log("hey i am resssss----------->",res,"<----------------hey i am ressssss")




  const sql = 'INSERT INTO login (`firstname`, `lastname`, `email`, `password`) VALUES (?, ?, ?, ?)';
  // console.log("hey i am sqllllll----------->",sql,"<----------------hey i am sqlllll")
  // console.log("hey i am req.body.password.toString()----------->",req.body.password.toString(),"<----------------hey i am req.body.password.toString()")
  // console.log("hey i am saltttttttt----------->",salt,"<----------------hey i am saltttttttt")
  


  // Hash the password using bcrypt
  bcrypt.hash(req.body.password.toString(), salt, (err, hash) => {
    // console.log("hey i am hasshhhhh----------->",hash,"<----------------hey i am hasshhhhh") //encrypted password
  

    if (err) {
      console.error('Error hashing password:', err);
      return res.json({ Error: 'Error for hashing password' });
    }

    const values = [
      req.body.firstname,
      req.body.lastname,
      req.body.email,
      hash,
    ];

    console.log("hey i am valuesssssss----------->",values,"<----------------hey i am valuesssssss")
    // console.log("hey i am valuesssssss----------->",values.hash,"<----------------hey i am valuesssssss") // undifined
    // console.log("hey i am valuesssssss----------->",values[hash],"<----------------hey i am valuesssssss")// undifined




    db.query(sql, values, (err, result) => {    // don't write like [values]
    
      // console.log("hey i am sqllllllagainnnn----------->",sql,"<----------------hey i am sqlllllagainnn")
      // console.log("hey i am valuesagainnnn----------->",values,"<----------------hey i am valuesagainnnn")

     // this line giving me error while running backend // console.log("hey i am valuesagainnnn----------->",result,"<----------------hey i am valuesagainnnn")
      
      if (err) {
        console.error('Error inserting data:', err);
        return res.json({ Error: 'Inserting data Error in server' });
      }
    // this line giving me error while running backend // console.log("hey i am valuesagainnnn----------->",res.json({ Status: 'Success' }),"<----------------hey i am valuesagainnnn")
      return res.json({ Status: 'Success' });


    });
  });
});



// app.post('/login', (req, res) => {

//   const sql = 'SELECT * FROM login WHERE email = ?';
// //   console.log("i am request---------------->>>>",  req.body,"<----------------i am request")
// //   console.log("i am response---------------->>>>",  res.body,"<----------------i am response")

  


//   db.query(sql, [req.body.email], (err, data) => {
    
//  // console.log("i am sqllll---------------->>>>",  sql,"<----------------i am sqllll")
//   // console.log("i am [req.body.email] ---------------->>>>", [req.body.email] ,"<----------------i am [req.body.email]")
//  // console.log("i am req.body.email---------------->>>>", req.body.email ,"<----------------i am req.body.email")


    

//     if (err) {
//       console.error('Error querying data:', err);
//       return res.json({Error: "Login error in server"});

//     }
//     if (data.length > 0) {
//   // console.log("i am data.length---------------->>>>",  data.length,"<----------------i am data.length")
//   // console.log("i am data[0]---------------->>>>",  data[0],"<----------------i am data[0]")


      
//   // console.log("i am password---------------->>>>",  req.body.password,"<----------------i am password")
//   // console.log("i am password string---------------->>>>",  req.body.password.toString(),"<----------------i am password")

//   // console.log("i am responseeee---------------->>>>",  response,"<----------------i am responseee") // giving error
  
//   bcrypt.compare(req.body.password.toString, data[0].password, (err, response)=>{

//   //   console.log("i am responseeee---------------->>>>",  response,"<----------------i am responseee") // giving error
//   // console.log("i am req.body.password---------------->>>>", req.body.password,req.body.id  ,"<----------------i am req.body.password")
 

//   // console.log("i am data[0].password,---------------->>>>",  data[0].password, data[0].id,"<----------------i am ata[0].password,")


//       if(err) return res.json({Error: "Password compare error"});

//   // console.log("i am responseeee.jsonn---------------->>>>",  res.json({Status: "Success"}) ,"<----------------i am responseee") // giving error

//       if(response){
//         return res.json({Status: "Success"});
//       }
//       else {
//         return res.json({Error: "Password not matched"});
//       }


//      })
//     }
//      else {
//       return res.json({Error: "No email existed"});
//     }
//   });
// });





// ... (previous code)


// working code------>>>>


// app.post('/login', (req, res) => {
//   const sql = 'SELECT * FROM login WHERE email = ?';
//   console.log("i am request---------------->>>>", req.body, "<----------------i am request");

//   // Check if 'email' and 'password' fields are present in the request body
//   if (!req.body.email || !req.body.password) {
//     return res.json({ Error: "Email and password fields are required." });
//   }

//   db.query(sql, [req.body.email], (err, data) => {
//     console.log("i am sqllll---------------->>>>", sql, "<----------------i am sqllll");
//     console.log("i am req.body.email---------------->>>>", req.body.email, "<----------------i am req.body.email");

//     if (err) {
//       console.error('Error querying data:', err);
//       return res.json({ Error: "Login error in server" });
//     }

//     if (data.length > 0) {
//       console.log("i am data.length---------------->>>>", data.length, "<----------------i am data.length");
//       console.log("i am data[0]---------------->>>>", data[0], "<----------------i am data[0]");
//       console.log("i am password---------------->>>>", req.body.password, "<----------------i am password");
//       console.log("i am password string---------------->>>>", req.body.password.toString(), "<----------------i am password");

//       bcrypt.compare(req.body.password.toString(), data[0].password, (err, response) => {
//         console.log("i am responseeee---------------->>>>", response, "<----------------i am responseee"); // giving error
//         console.log("i am req.body.password---------------->>>>", req.body.password, "<----------------i am req.body.password");
//         console.log("i am data[0].password,---------------->>>>", data[0].password, "<----------------i am data[0].password,");

//         if (err) return res.json({ Error: "Password compare error" });

//         if (response) {
//           return res.json({ Status: "Success" });
//         } else {
//           return res.json({ Error: "Password not matched" });
//         }
//       });
//     } else {
//       return res.json({ Error: "No email existed" });
//     }
//   });
// });






app.post('/login', (req, res) => {
    const sql = 'SELECT * FROM login WHERE `email` = ?';


    console.log("req.body.password---------------------------->",req.body.password,"<--------------------------req.body.password")
    db.query(sql, [req.body.email], (err, data) => {
      if (!req.body.email || !req.body.password) {
            return res.json({ Error: "Email and password fields are required." });
          }
        
                console.log("i am sqllll---------------->>>>", sql, "<----------------i am sqllll");
                console.log("i am req.body.email---------------->>>>", req.body.email, "<----------------i am req.body.email");
            
                if (err) {
                  console.error('Error querying data:', err);
                  return res.json({ Error: "Login error in server" });
                }
            
                if (data.length > 0) {
                  console.log("i am data.length---------------->>>>", data.length, "<----------------i am data.length");
                  console.log("i am data[0]---------------->>>>", data[0], "<----------------i am data[0]");
                  console.log("i am password---------------->>>>", req.body.password, "<----------------i am password");
                  console.log("i am password string---------------->>>>", req.body.password.toString(), "<----------------i am password");
                
              

                
                  bcrypt.compare(req.body.password.toString(), data[0].password, (err, response) => {
                            console.log("i am responseeee---------------->>>>", response, "<----------------i am responseee"); // giving error
                            console.log("i am req.body.password---------------->>>>", req.body.password, "<----------------i am req.body.password");
                            console.log("i am data[0].password,---------------->>>>", data[0].password, "<----------------i am data[0].password,");
                    
                            if (err) return res.json({ Error: "Password compare error" });
                    
                            if (response) {
                              return res.json({ Status: "Success" });
                            } else {
                              return res.json({ Error: "Password not matched" });
                            }
                          });
                        } else {
                          return res.json({ Error: "No email existed" });
                        }
                      });
      
    
  });
  

















// // ... (remaining code)



// // ... (previous code)



// // Another wayyyyyyyyyyy------->
// // Function to retrieve user data from the database
// // async function getUserDataFromDatabase(email) {
// //   const sql = 'SELECT * FROM login WHERE email = ?';
// //   return new Promise((resolve, reject) => {
// //     db.query(sql, [email], (err, data) => {
// //       if (err) {
// //         reject(err);
// //       } else {
// //         resolve(data);
// //       }
// //     });
// //   });
// // }

// // app.post('/login', async (req, res) => {
// //   try {
// //     // Check if 'email' and 'password' fields are present in the request body
// //     if (!req.body.email || !req.body.password) {
// //       return res.json({ Error: "Email and password fields are required." });
// //     }

// //     // Retrieve user data from the database
// //     const data = await getUserDataFromDatabase(req.body.email);

// //     if (data.length > 0) {
// //       // Compare the provided password with the hashed password from the database
// //       const passwordMatch = await bcrypt.compare(req.body.password.toString(), data[0].password);
     
// //      console.log("passsworrrrrrrrmatchhhh----->",passwordMatch)
     
// //       if (passwordMatch) {
// //         return res.json({ Status: "Success" });
// //       } else {
// //         return res.json({ Error: "Password not matched" });
// //       }
// //     } else {
// //       return res.json({ Error: "No email existed" });
// //     }
// //   } catch (err) {
// //     console.error('Error while logging in:', err);
// //     return res.json({ Error: "Login error in server" });
// //   }
// // });

// // ... (remaining code)








// // -----> another way


// // ... (previous code)

// // Function to retrieve user data from the database
// // async function getUserDataFromDatabase(email) {
// //   const sql = 'SELECT * FROM login WHERE email = ?';
// //   return new Promise((resolve, reject) => {
// //     db.query(sql, [email], (err, data) => {
// //       if (err) {
// //         reject(err);
// //       } else {
// //         resolve(data);
// //       }
// //     });
// //   });
// // }

// // Function to compare the provided password with the hashed password
// // async function comparePasswords(plainPassword, hashedPassword) {
// //   return bcrypt.compare(plainPassword, hashedPassword);
// // }

// // app.post('/login', async (req, res) => {
// //   try {
// //     // Check if 'email' and 'password' fields are present in the request body
// //     if (!req.body.email || !req.body.password) {
// //       return res.json({ Error: "Email and password fields are required." });
// //     }

// //     // Retrieve user data from the database
// //     const data = await getUserDataFromDatabase(req.body.email);

// //     if (data.length > 0) {
// //       const passwordMatch = await comparePasswords(req.body.password.toString(), data[0].password);
// //       console.log("passsssworrrdddd --------->",passwordMatch)
// //       if (passwordMatch) {
// //         return res.json({ Status: "Success" });
// //       } else {
// //         return res.json({ Error: "Password not matched" });
// //       }
// //     } else {
// //       return res.json({ Error: "No email existed" });
// //     }
// //   } catch (err) {
// //     console.error('Error while logging in:', err);
// //     return res.json({ Error: "Login error in server" });
// //   }
// // });

// // ... (remaining code)






// // another wayyyyyyyy crrpto not working---->


// // async function getUserDataFromDatabase(email) {
// //   const sql = 'SELECT * FROM login WHERE email = ?';
// //   return new Promise((resolve, reject) => {
// //     db.query(sql, [email], (err, data) => {
// //       if (err) {
// //         reject(err);
// //       } else {
// //         resolve(data);
// //       }
// //     });
// //   });
// // }

// // // Function to compare passwords in constant time
// // function comparePasswords(plainPassword, hashedPassword) {
// //   const hashedPasswordBuffer = Buffer.from(hashedPassword, 'hex');
// //   const salt = hashedPasswordBuffer.slice(0, 16); // Assuming the salt length is 16 bytes
// //   const hashedPasswordHash = hashedPasswordBuffer.slice(16); // Assuming the remaining is the hash

// //   const hash = crypto.pbkdf2Sync(plainPassword, salt, 10000, 32, 'sha256');
// //   return crypto.timingSafeEqual(hashedPasswordHash, hash);
// // }

// // app.post('/login', async (req, res) => {
// //   try {
// //     // Check if 'email' and 'password' fields are present in the request body
// //     if (!req.body.email || !req.body.password) {
// //       return res.json({ Error: "Email and password fields are required." });
// //     }

// //     // Retrieve user data from the database
// //     const data = await getUserDataFromDatabase(req.body.email);

// //     if (data.length > 0) {
// //       const passwordMatch = comparePasswords(req.body.password.toString(), data[0].password);
// //       console.log(passwordMatch)
// //       if (passwordMatch) {
        
// //         return res.json({ Status: "Success" });
// //       } else {
// //         return res.json({ Error: "Password not matched" });
// //       }
// //     } else {
// //       return res.json({ Error: "No email existed" });
// //     }
// //   } catch (err) {
// //     console.error('Error while logging in:', err);
// //     return res.json({ Error: "Login error in server" });
// //   }
// // });





app.listen(8081, () => {
  console.log('listening');
});















